<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <display-name>Archetype Created Web Application</display-name>
  <!-- spring配置监听-->
  <!--原来的是在项目中自己找到配置文件并且调用
    ClassPathXmlApplicationContext applicationContext = new ClassPathXmlApplicationContext(path);
    现在的话需要配置到服务器上，让Tomcat自己去生成，所以需要让它监听
  -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <!--calsspath里面可以使用通配符-->
    <param-name>contextConfigLocation</param-name>
    <!--classpath只会扫描resource根目录下的配置信息-->
    <param-value>classpath:spring-context.xml</param-value>
    <!--classpath*会扫描resource跟目录下以及其子目录的配置信息-->
    <!--<param-value>classpath*:</param-value>-->
  </context-param>
  
  <!--springmvc注册-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--初始化spring-mvc的配置路径-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
